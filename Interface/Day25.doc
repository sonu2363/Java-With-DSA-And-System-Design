Q1. What is an interface in Java?

Ans:The interface in Java is a mechanism to acheive abstraction. There can be only
    abstract methods in the Java interface, not method body. It is used to acheive
    abstraction and multiple inheritance in java.

Q2. Which modifiers are allowed for methods in an interface? Explain with an
    example.

Ans:Only public and abstract modifiers are allowed for methods in interfaces.
For example:
interface MyInterface{
   public abstract void display();
   public abstract void setName(String name);
   public abstract void setAge(int age);
}

From Java8 onwards interfaces allow default methods and static methods:
//static method
For example:
interface MyInterface{
   public void demo();
   public static void display() {
      System.out.println("This is a static method");
   }
}

//default method
interface sampleInterface{
   public void demo();
   default void display() {
      System.out.println("This is a default method");
   }
}

Q3. What is the use of interface in Java? Or, why do we use an interface in Java?

Ans:1. An interface is used to acheive full abstraction.
    2. Using interfaces is the best way to expose our project's API to some other
       project.
    3. Programmers use interfaces to customise features of software differently 
       for different objects.
    4. By using interface, we can acheive the functionality of multiple inheritance.

Q4. What is the difference betweeen abstract class and interface in Java?

Ans:Abstract class:
1.Abstract class can have abstract and non-abstract methods.
2.Abstract class doesn't support multiple inheritance.
3.Abstract class can have final, non-final , static and non-static variables.
4.Abstract class can provide the implementation of interface.
5.The abstract keyword is used to declare abstract class.
6.An abstract class can extend another java class and implement multiple Java interfaces.
7.An abstract class can be extended using the keyword "extends".
8.A java abstract class can have class members like private , protected, etc.
9.For example:
public abstract class Shape{
    public abstract void draw();
}

Interface:
1.Interface can have only abstract methods. Since java 8, it can have default and
static methods also.
2.Interface supports multiple inheritance.
3.Interface has only static and final variables.
4.Interface can't provide the implementation of abstract class.
5.The interface keyword is used to declare the interface.
6.An interface can extend another java interface only.
7.An interface can be implemented using the keyword "implements".
8.Members of a Java interface are public by default
9.For example:
public interface Drawable{
    void draw();
}




